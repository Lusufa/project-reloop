rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description This ruleset enforces a strict user-ownership model for user profiles.
     * @path /users/{userId}
     * @allow (create) - Authenticated user with UID 'user_abc' can create their profile at /users/user_abc.
     * @allow (get, update, delete) - Authenticated user with UID 'user_abc' can read/update/delete their profile at /users/user_abc.
     * @deny (create) - Authenticated user with UID 'user_abc' cannot create a profile at /users/user_xyz.
     * @deny (update, delete) - Authenticated user with UID 'user_abc' cannot update/delete the profile at /users/user_xyz.
     * @principle Enforces document ownership for writes and restricts access to a user's own data.
     */
    match /users/{userId} {
      // Helper function to check if the user is signed in
      function isSignedIn() {
        return request.auth != null;
      }

      // Helper function to check if the authenticated user is the owner of the document
      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      // Helper function to check if the authenticated user is the owner of the existing document
      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      // Allow a user to create their own document, enforcing that the user ID in the path matches the authenticated user's ID and the ID field.
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.id == userId;

      // Allow a user to read their own document.
      allow get: if isOwner(userId);

      // Allow a user to list their own document.
      allow list: if isOwner(userId);

      // Allow a user to update their own document, enforcing immutability of the id field.
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;

      // Allow a user to delete their own document.
      allow delete: if isExistingOwner(userId);
    }
  }
}